{"version":3,"file":"dropdown-select.min.js","sources":["../src/components/dropdown-select.js","../src/components/dropdown-select-trigger.js","../src/components/dropdown-options.js","../src/components/dropdown-option.js","../src/index.js"],"sourcesContent":["/**\n * dropdown-select component that handles the functionality of a custom dropdown\n * @class DropdownSelect\n * @extends HTMLElement\n */\nexport class DropdownSelect extends HTMLElement {\n  // private fields for event handlers\n  #handleDocumentClick;\n  #handleKeyDown;\n\n  // private fields for elements\n  #trigger;\n  #input;\n  #optionsContainer;\n  #options;\n  #label;\n  #currentFocusIndex = -1;\n\n  // Observed attributes\n  static get observedAttributes() {\n    return ['position'];\n  }\n\n  constructor() {\n    super();\n\n    // set default attributes\n    this.setAttribute('aria-hidden', 'true');\n\n    // bind event handlers\n    this.#handleDocumentClick = this.handleOutsideClick.bind(this);\n    this.#handleKeyDown = this.handleKeyboardNavigation.bind(this);\n  }\n\n  /**\n   * when element is connected to the dom\n   */\n  connectedCallback() {\n    // query all dom elements needed for the component\n    this.#trigger = this.querySelector('dropdown-select-trigger');\n    this.#input = this.querySelector('input');\n    this.#optionsContainer = this.querySelector('dropdown-options');\n    this.#options = this.querySelectorAll('dropdown-option');\n    this.#label = this.#trigger?.querySelector('.dropdown-label');\n\n    // Make sure the component itself isn't focusable\n    this.setAttribute('tabindex', '-1');\n\n    // initialize component\n    this.setupAriaAttributes();\n    this.bindUI();\n\n    // set initial state\n    this.hide();\n  }\n\n  /**\n   * clean up event listeners when element is removed\n   */\n  disconnectedCallback() {\n    this.unbindUI();\n  }\n\n  /**\n   * sets up aria attributes for accessibility\n   */\n  setupAriaAttributes() {\n    const listbox = this.#optionsContainer;\n    const trigger = this.#trigger;\n\n    // setup trigger button\n    trigger.setAttribute('aria-haspopup', 'listbox');\n    trigger.setAttribute('aria-expanded', 'false');\n    trigger.setAttribute('role', 'combobox');\n\n    if (!trigger.id) {\n      trigger.id = `dropdown-select-trigger-${Date.now()}`;\n    }\n\n    // setup listbox\n    listbox.setAttribute('role', 'listbox');\n    listbox.setAttribute('aria-labelledby', trigger.id);\n\n    // setup options\n    this.#options.forEach((option, index) => {\n      option.setAttribute('role', 'option');\n      option.setAttribute('aria-selected', 'false');\n      option.setAttribute('tabindex', '-1');\n      option.id = `${trigger.id}-option-${index}`;\n    });\n  }\n\n  /**\n   * binds the necessary ui events to the component\n   */\n  bindUI() {\n    // No need to bind element events - child components manage their own events\n    // This method is kept for potential future global event binding\n  }\n\n  /**\n   * unbinds event listeners\n   */\n  unbindUI() {\n    // No element events to remove - child components manage their own events\n    // This method is kept for potential future global event cleanup\n\n    // remove document events if they exist\n    document.removeEventListener('click', this.#handleDocumentClick);\n    document.removeEventListener('keydown', this.#handleKeyDown);\n  }\n\n  /**\n   * handles click events outside of the dropdown to close it\n   * @param {Event} e - the click event\n   */\n  handleOutsideClick(e) {\n    // if click is outside of the dropdown, close it\n    if (!this.contains(e.target)) {\n      this.hide();\n    }\n  }\n\n  /**\n   * handles keyboard navigation in the dropdown\n   * @param {KeyboardEvent} e - the keyboard event\n   */\n  handleKeyboardNavigation(e) {\n    const options = Array.from(this.#options);\n\n    switch (e.key) {\n      case 'Escape':\n        e.preventDefault();\n        this.hide();\n        break;\n\n      case 'ArrowDown':\n        e.preventDefault();\n\n        // if focus is on trigger, move to first option\n        if (document.activeElement === this.#trigger) {\n          this.#currentFocusIndex = -1;\n        }\n\n        // move to next option or loop to first\n        if (this.#currentFocusIndex < options.length - 1) {\n          this.focusOption(this.#currentFocusIndex + 1);\n        }\n        break;\n\n      case 'ArrowUp':\n        e.preventDefault();\n\n        // move to previous option or loop to last\n        if (this.#currentFocusIndex > 0) {\n          this.focusOption(this.#currentFocusIndex - 1);\n        } else if (this.#currentFocusIndex === 0) {\n          // if on first option, move focus back to trigger\n          this.#trigger.focus();\n          this.#currentFocusIndex = -1;\n        }\n        break;\n\n      case 'Home':\n        e.preventDefault();\n        this.focusOption(0);\n        break;\n\n      case 'End':\n        e.preventDefault();\n        this.focusOption(options.length - 1);\n        break;\n\n      case 'Enter':\n      case ' ':\n        e.preventDefault();\n\n        // if dropdown is closed and trigger is focused, open it\n        if (\n          this.getAttribute('aria-hidden') === 'true' &&\n          document.activeElement === this.#trigger\n        ) {\n          this.show();\n          return;\n        }\n\n        // if focus is on an option, select it\n        if (this.#currentFocusIndex >= 0) {\n          this.selectOption({ target: options[this.#currentFocusIndex] });\n        } else if (document.activeElement === this.#trigger) {\n          // if focus is on trigger, toggle the dropdown\n          this.toggleDropdown();\n        }\n        break;\n\n      default:\n        // handle typeahead - find option starting with pressed key\n        const key = e.key.toLowerCase();\n\n        // only proceed if it's a single character\n        if (key.length === 1) {\n          // find the first option that starts with the pressed key\n          const matchingOption = options.find((option) =>\n            option.textContent.trim().toLowerCase().startsWith(key)\n          );\n\n          if (matchingOption) {\n            const index = options.indexOf(matchingOption);\n            this.focusOption(index);\n          }\n        }\n        break;\n    }\n  }\n\n  /**\n   * focuses a specific option by index\n   * @param {number} index - the index of the option to focus\n   */\n  focusOption(index) {\n    const options = Array.from(this.#options);\n\n    // reset tabindex on all options\n    options.forEach((opt) => {\n      opt.setAttribute('tabindex', '-1');\n    });\n\n    // set tabindex on target option and focus it\n    if (options[index]) {\n      options[index].setAttribute('tabindex', '0');\n      options[index].focus();\n      this.#currentFocusIndex = index;\n    }\n  }\n\n  /**\n   * toggles the dropdown open/closed\n   */\n  toggleDropdown() {\n    if (this.getAttribute('aria-hidden') === 'true') {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * selects an option from the dropdown\n   * @param {Event} e - the click event\n   */\n  selectOption(e) {\n    const option = e.target.closest('dropdown-option');\n    if (!option) return;\n\n    // update aria-selected on all options\n    this.#options.forEach((opt) => {\n      opt.setAttribute('aria-selected', 'false');\n    });\n\n    // mark selected option\n    option.setAttribute('aria-selected', 'true');\n\n    // update the input value\n    if (this.#input) {\n      this.#input.value = option.dataset.value || option.textContent.trim();\n    }\n\n    // update the visible label\n    if (this.#label) {\n      this.#label.textContent = option.textContent.trim();\n    }\n\n    // dispatch change event\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        detail: {\n          value: option.dataset.value || option.textContent.trim(),\n          text: option.textContent.trim(),\n        },\n        bubbles: true,\n      })\n    );\n\n    // close the dropdown\n    this.hide();\n  }\n\n  /**\n   * Determines if the dropdown should open upward based on available space\n   * @private\n   */\n  #determineDirection() {\n    // If position is explicitly set, honor that\n    const userPosition = this.getAttribute('position');\n    if (userPosition === 'up' || userPosition === 'down') {\n      return userPosition;\n    }\n    \n    // Calculate available space\n    const rect = this.getBoundingClientRect();\n    const spaceBelow = window.innerHeight - rect.bottom;\n    const estimatedOptionsHeight = Math.min(\n      this.#options.length * 40, // Rough estimate of option height\n      parseInt(getComputedStyle(this).getPropertyValue('--options-max-height') || '15rem') * 16 // Convert rem to px\n    );\n    \n    // Determine if there's not enough space below, but more space above\n    if (spaceBelow < estimatedOptionsHeight && rect.top > estimatedOptionsHeight) {\n      return 'up';\n    }\n    \n    // Default to down\n    return 'down';\n  }\n\n  /**\n   * shows the dropdown options\n   */\n  show() {\n    // Determine direction to open\n    const direction = this.#determineDirection();\n    this.setAttribute('direction', direction);\n    \n    // set attributes for open state\n    this.setAttribute('aria-hidden', 'false');\n    this.#trigger.setAttribute('aria-expanded', 'true');\n\n    // find selected option or default to first\n    const selectedOption = Array.from(this.#options).find(\n      (opt) => opt.getAttribute('aria-selected') === 'true'\n    );\n\n    if (selectedOption) {\n      const selectedIndex = Array.from(this.#options).indexOf(selectedOption);\n      this.focusOption(selectedIndex);\n    } else if (this.#options.length > 0) {\n      this.focusOption(0);\n    }\n\n    // add global event listeners\n    document.addEventListener('click', this.#handleDocumentClick);\n    document.addEventListener('keydown', this.#handleKeyDown);\n  }\n\n  /**\n   * hides the dropdown options\n   */\n  hide() {\n    // set attributes for closed state\n    this.setAttribute('aria-hidden', 'true');\n    this.#trigger.setAttribute('aria-expanded', 'false');\n    \n    // Remove direction attribute\n    this.removeAttribute('direction');\n\n    // reset the current focus index\n    this.#currentFocusIndex = -1;\n\n    // remove global event listeners\n    document.removeEventListener('click', this.#handleDocumentClick);\n    document.removeEventListener('keydown', this.#handleKeyDown);\n\n    // return focus to trigger\n    this.#trigger.focus();\n  }\n}\n","/**\n * dropdown-select-trigger component\n * @class DropdownSelectTrigger\n * @extends HTMLElement\n */\nexport class DropdownSelectTrigger extends HTMLElement {\n  #handleKeyDown;\n  #handleClick;\n  \n  constructor() {\n    super();\n    // Make the trigger focusable\n    this.setAttribute('tabindex', '0');\n    this.#handleKeyDown = this.#onKeyDown.bind(this);\n    this.#handleClick = this.#onClick.bind(this);\n  }\n\n  connectedCallback() {\n    // Add caret if not present\n    if (!this.querySelector('.dropdown-caret')) {\n      const caret = document.createElement('span');\n      caret.className = 'dropdown-caret';\n      this.appendChild(caret);\n    }\n    \n    // Add event listeners\n    this.addEventListener('keydown', this.#handleKeyDown);\n    this.addEventListener('click', this.#handleClick);\n  }\n  \n  disconnectedCallback() {\n    this.removeEventListener('keydown', this.#handleKeyDown);\n    this.removeEventListener('click', this.#handleClick);\n  }\n  \n  /**\n   * Handle keydown events on the trigger\n   * @param {KeyboardEvent} e - The keyboard event\n   * @private\n   */\n  #onKeyDown(e) {\n    // Handle Enter and Space key presses\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation(); // Prevent event bubbling\n      this.#toggleDropdown();\n    }\n  }\n  \n  /**\n   * Handle click events on the trigger\n   * @param {MouseEvent} e - The mouse event\n   * @private\n   */\n  #onClick(e) {\n    this.#toggleDropdown();\n  }\n  \n  /**\n   * Toggle the parent dropdown\n   * @private\n   */\n  #toggleDropdown() {\n    const dropdown = this.closest('dropdown-select');\n    if (dropdown && typeof dropdown.toggleDropdown === 'function') {\n      dropdown.toggleDropdown();\n    }\n  }\n}\n","/**\n * dropdown-options component\n * @class DropdownOptions\n * @extends HTMLElement\n */\nexport class DropdownOptions extends HTMLElement {\n  constructor() {\n    super();\n  }\n}\n","/**\n * dropdown-option component\n * @class DropdownOption\n * @extends HTMLElement\n */\nexport class DropdownOption extends HTMLElement {\n  #handleClick;\n  \n  constructor() {\n    super();\n    this.#handleClick = this.#onClick.bind(this);\n  }\n  \n  connectedCallback() {\n    // Add click event listener\n    this.addEventListener('click', this.#handleClick);\n  }\n  \n  disconnectedCallback() {\n    // Clean up event listener\n    this.removeEventListener('click', this.#handleClick);\n  }\n  \n  /**\n   * Handle click events on the option\n   * @param {MouseEvent} e - The mouse event\n   * @private\n   */\n  #onClick(e) {\n    e.preventDefault();\n    this.#notifySelection();\n  }\n  \n  /**\n   * Notify the parent dropdown that this option was selected\n   * @private\n   */\n  #notifySelection() {\n    const dropdown = this.closest('dropdown-select');\n    if (dropdown && typeof dropdown.selectOption === 'function') {\n      dropdown.selectOption({ target: this });\n    }\n  }\n}\n","/**\n * @file Main entry point for dropdown-select web component\n * @author Cory Schulz\n * @version 0.1.0\n */\n\n// import styles\nimport './styles/dropdown-select.scss';\n\n// import components\nimport { DropdownSelect } from './components/dropdown-select.js';\nimport { DropdownSelectTrigger } from './components/dropdown-select-trigger.js';\nimport { DropdownOptions } from './components/dropdown-options.js';\nimport { DropdownOption } from './components/dropdown-option.js';\n\n// export components for external use\nexport { DropdownSelect, DropdownSelectTrigger, DropdownOptions, DropdownOption };\n\n// define custom elements if not already defined\nif (!customElements.get('dropdown-select')) {\n  customElements.define('dropdown-select', DropdownSelect);\n}\n\nif (!customElements.get('dropdown-select-trigger')) {\n  customElements.define('dropdown-select-trigger', DropdownSelectTrigger);\n}\n\nif (!customElements.get('dropdown-options')) {\n  customElements.define('dropdown-options', DropdownOptions);\n}\n\nif (!customElements.get('dropdown-option')) {\n  customElements.define('dropdown-option', DropdownOption);\n}\n"],"names":["DropdownSelect","HTMLElement","handleDocumentClick","handleKeyDown","trigger","input","optionsContainer","options","label","currentFocusIndex","observedAttributes","constructor","super","this","setAttribute","handleOutsideClick","bind","handleKeyboardNavigation","connectedCallback","querySelector","querySelectorAll","setupAriaAttributes","bindUI","hide","disconnectedCallback","unbindUI","listbox","id","Date","now","forEach","option","index","document","removeEventListener","e","contains","target","Array","from","key","preventDefault","activeElement","length","focusOption","focus","getAttribute","show","selectOption","toggleDropdown","toLowerCase","matchingOption","find","textContent","trim","startsWith","indexOf","opt","closest","value","dataset","dispatchEvent","CustomEvent","detail","text","bubbles","determineDirection","userPosition","rect","getBoundingClientRect","spaceBelow","window","innerHeight","bottom","estimatedOptionsHeight","Math","min","parseInt","getComputedStyle","getPropertyValue","top","direction","selectedOption","selectedIndex","addEventListener","removeAttribute","DropdownSelectTrigger","handleClick","onKeyDown","onClick","caret","createElement","className","appendChild","stopPropagation","dropdown","DropdownOptions","DropdownOption","notifySelection","customElements","get","define"],"mappings":"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"}